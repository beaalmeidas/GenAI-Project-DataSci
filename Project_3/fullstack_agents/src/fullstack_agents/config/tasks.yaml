requirements_task:
  description: >
    Entenda o pedido do usuário: "{pedido_usuario}"
    Transforme isso em uma especificação clara para a landing page.
    Detalhe as seções necessárias (ex: cabeçalho, formulário de contato, área de serviços),
    e descreva as funcionalidades básicas.
  expected_output: >
    Uma especificação em texto simples, com as seções e funcionalidades da landing page claramente descritas.
  agent: product_manager

backend_task:
  description: >
    Com base na especificação fornecida pelo Product Manager, crie um código completo em Flask.
    O Flask deve conter uma rota '/' que retorna "Landing page online"
    e uma rota '/contato' que aceita POST com dados do formulário e retorna uma mensagem de sucesso.
    O código deve ser apresentado como string no console.
  expected_output: >
    O código completo do app Flask em uma string, pronto para execução.
  agent: backend_developer

frontend_task:
  description: >
    Com base na especificação fornecida pelo Product Manager e código criado pelo Backend Developer, crie o código front-end da landing page.
    Utilize HTML/CSS/JS puro ou React, conforme necessário. A landing page deve ser responsiva e visualmente agradável, seguindo as melhores práticas de design.
    A página deve ter as especificações fornecidas pelo Product Manager.
    O código deve ser apresentado como string no console.
  expected_output: >
    O código HTML/CSS/JS completo como string no console, pronto para salvar e rodar.
  agent: frontend_developer
